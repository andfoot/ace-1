<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.huacainfo.ace.uf.dao.PersonageDao">
    <resultMap id="BaseResultMap" type="com.huacainfo.ace.uf.model.Personage">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="areaCode" jdbcType="VARCHAR" property="areaCode"/>
        <result column="deptId" jdbcType="VARCHAR" property="deptId"/>
        <result column="category" jdbcType="VARCHAR" property="category"/>
        <result column="careerType" jdbcType="VARCHAR" property="careerType"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="sex" jdbcType="CHAR" property="sex"/>
        <result column="birthday" jdbcType="DATE" property="birthday"/>
        <result column="photo" jdbcType="VARCHAR" property="photo"/>
        <result column="placeOfOrigin" jdbcType="VARCHAR" property="placeOfOrigin"/>
        <result column="nation" jdbcType="VARCHAR" property="nation"/>
        <result column="degreee" jdbcType="VARCHAR" property="degreee"/>
        <result column="academicTitle" jdbcType="VARCHAR" property="academicTitle"/>
        <result column="rank" jdbcType="VARCHAR" property="rank"/>
        <result column="party" jdbcType="VARCHAR" property="party"/>
        <result column="joinDate" jdbcType="TIMESTAMP" property="joinDate"/>
        <result column="administrativeDuty" jdbcType="VARCHAR" property="administrativeDuty"/>
        <result column="currentPostDate" jdbcType="TIMESTAMP" property="currentPostDate"/>
        <result column="currentRankDate" jdbcType="TIMESTAMP" property="currentRankDate"/>
        <result column="mobile" jdbcType="VARCHAR" property="mobile"/>
        <result column="tel" jdbcType="VARCHAR" property="tel"/>
        <result column="pcode" jdbcType="VARCHAR" property="pcode"/>
        <result column="latitude" jdbcType="DECIMAL" property="latitude"/>
        <result column="longitude" jdbcType="DECIMAL" property="longitude"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
        <result column="status" jdbcType="CHAR" property="status"/>
        <result column="createUserId" jdbcType="VARCHAR" property="createUserId"/>
        <result column="createUserName" jdbcType="VARCHAR" property="createUserName"/>
        <result column="createDate" jdbcType="TIMESTAMP" property="createDate"/>
        <result column="lastModifyUserId" jdbcType="VARCHAR" property="lastModifyUserId"/>
        <result column="lastModifyUserName" jdbcType="VARCHAR" property="lastModifyUserName"/>
        <result column="lastModifyDate" jdbcType="TIMESTAMP" property="lastModifyDate"/>
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.huacainfo.ace.uf.model.Personage">
        <result column="intro" jdbcType="LONGVARCHAR" property="intro"/>
    </resultMap>
    <resultMap extends="BaseResultMap" id="BaseResultMapVo" type="com.huacainfo.ace.uf.vo.PersonageVo">

    </resultMap>
    <sql id="Base_Column_List">
        id, areaCode, deptId, category,careerType, name, sex, birthday, photo, placeOfOrigin, nation,
        degreee, academicTitle, rank, party, joinDate, administrativeDuty, currentPostDate,
        currentRankDate, mobile, tel, pcode, latitude, longitude, remark, status, createUserId,
        createUserName, createDate, lastModifyUserId, lastModifyUserName, lastModifyDate,qrcode
    </sql>
    <sql id="Blob_Column_List">
        intro
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMapVo">
        select
        t.id, t.areaCode, t.category,t.careerType, t.name, t.sex, t.birthday, t.photo, t.placeOfOrigin, t.nation,
        t.degreee, t.academicTitle, t.rank, t.party, t.joinDate, t.administrativeDuty, t.currentPostDate,
        t.currentRankDate, t.mobile, t.tel, t.pcode, t.latitude, t.longitude, t.remark, t.status, t.createUserId,
        t.createUserName, t.createDate, t.lastModifyUserId, t.lastModifyUserName, t.lastModifyDate,
        t.intro,a.fullname areaName,t.deptId deptName,c.fullname placeOfOriginName,t.qrcode
        from personage t
        left join portal.province a on t.areaCode=a.code

        left join portal.province c on t.placeOfOrigin=c.code

        where t.id = #{id,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete from personage
        where id = #{id,jdbcType=VARCHAR}
    </delete>
    <insert id="insert" parameterType="com.huacainfo.ace.uf.model.Personage">
        insert into personage (id, areaCode, deptId,
        category,careerType, name, sex, birthday,
        photo, placeOfOrigin, nation,
        degreee, academicTitle, rank,
        party, joinDate, administrativeDuty,
        currentPostDate, currentRankDate, mobile,
        tel, pcode, latitude,
        longitude, remark, status,
        createUserId, createUserName, createDate,
        lastModifyUserId, lastModifyUserName, lastModifyDate,
        intro,qrcode)
        values (#{id,jdbcType=VARCHAR}, #{areaCode,jdbcType=VARCHAR}, #{deptId,jdbcType=VARCHAR},
        #{category,jdbcType=VARCHAR},#{careerType,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{sex,jdbcType=CHAR}, #{birthday,jdbcType=DATE},
        #{photo,jdbcType=VARCHAR}, #{placeOfOrigin,jdbcType=VARCHAR}, #{nation,jdbcType=VARCHAR},
        #{degreee,jdbcType=VARCHAR}, #{academicTitle,jdbcType=VARCHAR}, #{rank,jdbcType=VARCHAR},
        #{party,jdbcType=VARCHAR}, #{joinDate,jdbcType=TIMESTAMP}, #{administrativeDuty,jdbcType=VARCHAR},
        #{currentPostDate,jdbcType=TIMESTAMP}, #{currentRankDate,jdbcType=TIMESTAMP}, #{mobile,jdbcType=VARCHAR},
        #{tel,jdbcType=VARCHAR}, #{pcode,jdbcType=VARCHAR}, #{latitude,jdbcType=DECIMAL},
        #{longitude,jdbcType=DECIMAL}, #{remark,jdbcType=VARCHAR}, #{status,jdbcType=CHAR},
        #{createUserId,jdbcType=VARCHAR}, #{createUserName,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP},
        #{lastModifyUserId,jdbcType=VARCHAR}, #{lastModifyUserName,jdbcType=VARCHAR},
        #{lastModifyDate,jdbcType=TIMESTAMP},
        #{intro,jdbcType=LONGVARCHAR},#{qrcode,jdbcType=VARCHAR})
    </insert>
    <update id="updateByPrimaryKey" parameterType="com.huacainfo.ace.uf.model.Personage">
        update personage
        set areaCode = #{areaCode,jdbcType=VARCHAR},
        deptId = #{deptId,jdbcType=VARCHAR},
        category = #{category,jdbcType=VARCHAR},
        careerType = #{careerType,jdbcType=VARCHAR},
        name = #{name,jdbcType=VARCHAR},
        sex = #{sex,jdbcType=CHAR},
        birthday = #{birthday,jdbcType=DATE},
        photo = #{photo,jdbcType=VARCHAR},
        placeOfOrigin = #{placeOfOrigin,jdbcType=VARCHAR},
        nation = #{nation,jdbcType=VARCHAR},
        degreee = #{degreee,jdbcType=VARCHAR},
        academicTitle = #{academicTitle,jdbcType=VARCHAR},
        rank = #{rank,jdbcType=VARCHAR},
        party = #{party,jdbcType=VARCHAR},
        joinDate = #{joinDate,jdbcType=TIMESTAMP},
        administrativeDuty = #{administrativeDuty,jdbcType=VARCHAR},
        currentPostDate = #{currentPostDate,jdbcType=TIMESTAMP},
        currentRankDate = #{currentRankDate,jdbcType=TIMESTAMP},
        mobile = #{mobile,jdbcType=VARCHAR},
        tel = #{tel,jdbcType=VARCHAR},
        pcode = #{pcode,jdbcType=VARCHAR},
        remark = #{remark,jdbcType=VARCHAR},
        qrcode = #{qrcode,jdbcType=VARCHAR},
        status = #{status,jdbcType=CHAR},
        lastModifyUserId = #{lastModifyUserId,jdbcType=VARCHAR},
        lastModifyUserName = #{lastModifyUserName,jdbcType=VARCHAR},
        lastModifyDate = #{lastModifyDate,jdbcType=TIMESTAMP},
        intro = #{intro,jdbcType=LONGVARCHAR}
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <sql id="whereCondition">
        from personage t
        left join portal.province a on t.areaCode=a.code
        left join portal.department b on t.deptId=b.department_id
        left join portal.province c on t.placeOfOrigin=c.code
        where 0=0
        <if test='condition.name!=null and condition.name!=""'>
            and t.name like
            concat('%',#{condition.name,jdbcType=VARCHAR},'%')
        </if>
        <if test='condition.areaCode!=null and condition.areaCode!=""'>
            and t.areaCode like
            concat(#{condition.areaCode,jdbcType=VARCHAR},'%')
        </if>
        <if test="condition.category!=null and condition.category!=&quot;&quot;">
            and t.category  like   concat(#{condition.category,jdbcType=VARCHAR},'%')
        </if>
        <if test="condition.mobile!=null and condition.mobile!=&quot;&quot;">
            and t.mobile =#{condition.mobile,jdbcType=VARCHAR}
        </if>
        <if test='condition.deptId!=null and condition.deptId!=""'>
            and t.deptId =#{condition.deptId,jdbcType=VARCHAR}
        </if>
        <if test='condition.careerType!=null and condition.careerType!=""'>
            and t.careerType =#{condition.careerType,jdbcType=VARCHAR}
        </if>
        <if test='condition.nation!=null and condition.nation!=""'>
            and t.deptId =#{condition.deptId,jdbcType=VARCHAR}
        </if>
        <if test='condition.degreee!=null and condition.degreee!=""'>
            and t.degreee =#{condition.degreee,jdbcType=VARCHAR}
        </if>
        <if test='condition.party!=null and condition.party!=""'>
            and t.party =#{condition.party,jdbcType=VARCHAR}
        </if>
    </sql>
    <select id="findCount" resultType="int">
        SELECT COUNT(*)
        <include refid="whereCondition"/>
    </select>
    <select id="findList" resultMap="BaseResultMapVo">
        select m.* from(
        select
        t.id, t.areaCode, t.deptId, t.category,t.careerType, t.name, t.sex, t.birthday, t.photo, t.placeOfOrigin, t.nation,
        t.degreee, t.academicTitle, t.rank, t.party, t.joinDate, t.administrativeDuty, t.currentPostDate,
        t.currentRankDate, t.mobile, t.tel, t.pcode, t.latitude, t.longitude, t.remark, t.status, t.createUserId,
        t.createUserName, t.createDate, t.lastModifyUserId, t.lastModifyUserName, t.lastModifyDate,
        t.intro,a.fullname areaName,b.department_name deptName,c.fullname placeOfOriginName,t.qrcode

        <include refid="whereCondition"/>
        ) m
        <choose>
            <when test='orderBy!=null and orderBy!=""'>
                ORDER BY m.${orderBy}
            </when>
            <otherwise>
                order by convert(m.name using gbk) asc
            </otherwise>
        </choose>
        limit #{start,jdbcType=DECIMAL}, #{limit,jdbcType=DECIMAL}
    </select>

    <select id="isExit" resultType="int">
        select count(*)
        from
        personage where
        name=#{name} and areaCode=#{areaCode} and mobile=#{mobile}
    </select>
    <select id="selectPersonageList" resultType="map">
        SELECT
        t.id 'id',
        t.name 'name',
        t.photo,
        a.name areaName,t.deptId deptName,c.fullname placeOfOriginName,dict.name categoryName,
        t.deptId addr,
        wx.latitude,
        wx.longitude,
        t.mobile tel,
        'personageSub' types,
        (POWER(MOD(ABS(wx.longitude - #{longitude,jdbcType=DECIMAL}),360),2) + POWER(ABS(wx.latitude - #{latitude,jdbcType=DECIMAL}),2)) AS distance
        from personage t
        inner join portal.province a on t.areaCode=a.code

        inner join portal.wx_user wx on t.mobile=wx.mobile
        inner join portal.province c on t.placeOfOrigin=c.code
        inner join (select code,name from portal.dict where category_id='98') dict on t.category=dict.code
        where t.status='1' and wx.latitude is not null and wx.longitude is not null
        <if test='q!=null and q!=""'>
            and t.name like
            concat('%',#{q,jdbcType=VARCHAR},'%')
        </if>
        <if test='user.category!=null and user.category!=""'>
            and t.category =#{user.category,jdbcType=VARCHAR}
        </if>
        and t.areaCode like concat(#{user.areaCode,jdbcType=VARCHAR},'%')
        ORDER BY distance LIMIT 50
    </select>

    <select id="selectPersonageCategoryList" resultType="map">
        SELECT
        t.CODE 'id',
        t.NAME 'name',
        t.remark 'icon',
        'category' type,
        ifnull(a.num,0) num
        FROM
        portal.dict t
        left join (select category,count(1) num from personage where status='1' group by category) a on t.code=a.category
        WHERE
        category_id = '98'

        <if test='user.category!=null and user.category!=""'>
            and code =#{user.category,jdbcType=VARCHAR}
        </if>
    </select>

    <select id="selectPersonagePartyList" resultType="map">
        SELECT
        t.CODE 'id',
        t.NAME 'name',
        t.remark 'icon',
        ifnull(a.num,0) num,
        'category' type
        FROM
        portal.dict t
        left join (select party,count(1) num from personage where status='1' and category='01' group by party) a on t.code=a.party
        WHERE
        category_id = '101' and t.code !='01'
        <if test='user.party!=null and user.party!=""'>
            and code =#{user.party,jdbcType=VARCHAR}
        </if>
    </select>

    <select id="selectPersonageListByText" resultType="map">
        select t.id, t.name, t.category,t.photo, t.mobile,
        a.name areaName,t.deptId deptName,c.fullname placeOfOriginName,dict.name categoryName,
        IFNULL(wx.mobile,'0') bindStatus,
        'person' type,
        t.party
        from personage t
        inner join portal.province a on t.areaCode=a.code
        left join portal.province c on t.placeOfOrigin=c.code
        inner join (select code,name from portal.dict where category_id='98') dict on t.category=dict.code
        left join portal.wx_user wx on t.mobile=wx.mobile
        where t.status='1'
        <if test='q!=null and q!=""'>
            and t.name like
            concat('%',#{q,jdbcType=VARCHAR},'%')
        </if>
        <if test='user.category!=null and user.category!=""'>
            and t.category =#{user.category,jdbcType=VARCHAR}
        </if>
        and t.areaCode like concat(#{user.areaCode,jdbcType=VARCHAR},'%')
         order by convert(t.name using gbk) asc
    </select>

    <select id="selectPersonageById" resultType="map">
        SELECT
        t.id,
        t.areaCode,
        d.name categoryName,
        t.category,
        t. NAME 'name',
        t.sex,
        t.birthday,
        date_format(t.birthday, '%Y-%m') birthdayName,
        t.photo,
        t.placeOfOrigin,
        t.nation,
        f.name partyName,
        e.name nationName,
        t.degreee,
        t.academicTitle,
        t.rank,
        t.party,
        t.joinDate,
        date_format(t.joinDate, '%Y-%m-%d') joinDateName,
        t.administrativeDuty,
        t.currentPostDate,
        date_format(t.currentPostDate, '%Y-%m-%d') currentPostDateName,
        t.currentRankDate,
        date_format(t.currentRankDate, '%Y-%m-%d') currentRankDateName,
        t.mobile,
        t.tel,
        t.pcode,
        t.latitude,
        t.longitude,
        t.remark,
        t.intro,
        a. NAME areaName,
        t.deptId deptName,
        c.fullname placeOfOriginName,
        t.careerType,
        g.`name` careerTypeName,
        h.`name` degreeeName,
        i.`name` academicTitleName,
        j.`name` rankName,
        wx.mobile bindStatus,
        wx.avatarUrl,
        wx.nickName
        FROM
        personage t
        LEFT JOIN portal.province a ON t.areaCode = a. CODE

        LEFT JOIN portal.province c ON t.placeOfOrigin = c. CODE
        LEFT JOIN (select code,name from portal.dict where category_id='98')  d ON t.category = d. CODE
        LEFT JOIN (select code,name from portal.dict where category_id='09')  e ON t.nation = e. CODE
        LEFT JOIN (select code,name from portal.dict where category_id='101')  f ON t.party = f. CODE
        LEFT JOIN (select code,name from portal.dict where category_id='102')  g ON t.careerType = g. CODE
        LEFT JOIN (select code,name from portal.dict where category_id='10')  h ON t.degreee = h. CODE
        LEFT JOIN (select code,name from portal.dict where category_id='99')  i ON t.academicTitle = i. CODE
        LEFT JOIN (select code,name from portal.dict where category_id='100')  j ON t.rank = j. CODE
        left join portal.wx_user wx on t.mobile=wx.mobile
        where t.id=#{id}
    </select>

    <select id="selectPersonage" resultType="map">
        select t.id,
        t.name,
        t.mobile,
        t.deptId deptName
        from personage t where 0=0
        <if test='q!=null and q!=""'>
            and (t.id=#{q} or t.name like
            concat('%',#{q},'%') or t.deptId like concat('%',#{q},'%') )
        </if>
        order by t.name
        limit 0,20
    </select>
    <select id="selectPersonageTreeList" resultType="map">
        SELECT
        *
        FROM
        (
        SELECT
        t.ID,
        t.pcode PID,
        t. NAME TEXT,
        'closed' STATE,
        t. CODE SRC,
        '' ICON,
        '' HREF,
        (
        SELECT
        count(1)
        FROM
        personage
        WHERE
        STATUS = '1'
        AND category LIKE CONCAT(t. CODE, '%')
        ) ICONCLS,
        (
        SELECT
        count(*)
        FROM
        (
        SELECT
        pcode
        FROM
        portal.dict
        UNION ALL
        SELECT
        f.id AS pcode
        FROM
        personage
        INNER JOIN (
        SELECT
        id,
        CODE
        FROM
        portal.dict

        WHERE
        category_id = '98'
        ) f ON category = f. CODE

        ) dict
        WHERE
        pcode = t.id
        ) CHILD_COUNT
        FROM
        portal.dict t
        WHERE
        t.category_id = '98'

        <if test='user.category!=null and user.category!=""'>
            and t.code  like CONCAT(#{user.category,jdbcType=VARCHAR}, '%')
        </if>
        ORDER BY
        t. CODE
        ) a
        UNION ALL
        SELECT
        *
        FROM
        (
        SELECT
        t.id ID,
        a.id PID,
        t. NAME TEXT,
        'closed' STATE,
        t.photo SRC,
        t.deptId ICON,
        ifnull(m. NAME,'待补充') HREF,
        t.mobile ICONCLS,
        0 CHILD_COUNT
        FROM
        personage t

        INNER JOIN (
        SELECT
        id,
        CODE
        FROM
        portal.dict
        WHERE
        category_id = '98'
        ) a ON t.category = a. CODE
        left JOIN (
        SELECT
        CODE,
        NAME
        FROM
        portal.dict
        WHERE
        category_id = '09'
        ) m ON t.nation = m. CODE
        where 0=0
        <if test='user.party!=null and user.party!=""'>
            and t.party =#{user.party,jdbcType=VARCHAR}
        </if>
        <if test='q!=null and q!=""'>
            and t.name like
            concat('%',#{q,jdbcType=VARCHAR},'%')
        </if>

        ORDER BY convert(t.name using gbk) asc
        ) b
    </select>

    <select id="selectPersonageCheckTreeList" resultType="map">
        SELECT
        *
        FROM
        (
        SELECT
        t.ID,
        t.pcode PID,
        t. NAME TEXT,
        'closed' STATE,
        t. CODE SRC,
        '' ICON,
        '' HREF,
        (
        SELECT
        count(1)
        FROM
        personage
        WHERE
        STATUS = '1'
        AND category LIKE CONCAT(t. CODE, '%')
        ) ICONCLS,
        (
        SELECT
        count(*)
        FROM
        (
        SELECT
        pcode
        FROM
        portal.dict
        UNION ALL
        SELECT
        f.id AS pcode
        FROM
        personage
        INNER JOIN (
        SELECT
        id,
        CODE
        FROM
        portal.dict

        WHERE
        category_id = '98'
        ) f ON category = f. CODE

        ) dict
        WHERE
        pcode = t.id
        ) CHILD_COUNT
        FROM
        portal.dict t
        WHERE
        t.category_id = '98'


        ORDER BY
        t. CODE
        ) a
        UNION ALL
        SELECT
        *
        FROM
        (
        SELECT
        t.id ID,
        a.id PID,
        t. NAME TEXT,
        'closed' STATE,
        t.photo SRC,
        t.deptId ICON,
        t.mobile HREF,
        t.mobile ICONCLS,
        0 CHILD_COUNT
        FROM
        personage t

        INNER JOIN (
        SELECT
        id,
        CODE
        FROM
        portal.dict
        WHERE
        category_id = '98'
        ) a ON t.category = a. CODE
        left JOIN (
        SELECT
        CODE,
        NAME
        FROM
        portal.dict
        WHERE
        category_id = '09'
        ) m ON t.nation = m. CODE
        where 0=0

        ORDER BY convert(t.name using gbk) asc
        ) b
    </select>
    <select id="selectDictCodeBYId" resultType="map">
        select code from portal.dict where id=#{id}
    </select>
    <select id="isExitPersonageByMobile" resultType="int">
        select count(1) from personage where mobile=#{mobile}
    </select>
</mapper>